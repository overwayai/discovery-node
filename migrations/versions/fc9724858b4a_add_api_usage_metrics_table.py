"""add_api_usage_metrics_table

Revision ID: fc9724858b4a
Revises: 6622dd9aa570
Create Date: 2025-07-30 17:37:00.587991

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql


# revision identifiers, used by Alembic.
revision: str = 'fc9724858b4a'
down_revision: Union[str, None] = '6622dd9aa570'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    # Create api_usage_metrics table
    op.create_table(
        'api_usage_metrics',
        sa.Column('id', sa.UUID(), nullable=False),
        sa.Column('request_id', sa.UUID(), nullable=False),
        sa.Column('timestamp', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
        sa.Column('response_time_ms', sa.Integer(), nullable=False),
        sa.Column('method', sa.String(10), nullable=False),
        sa.Column('path', sa.String(500), nullable=False),
        sa.Column('route_pattern', sa.String(500), nullable=True),
        sa.Column('query_params', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
        sa.Column('status_code', sa.Integer(), nullable=False),
        sa.Column('organization_id', sa.UUID(), nullable=True),
        sa.Column('api_key_id', sa.UUID(), nullable=True),
        sa.Column('ip_address', sa.String(45), nullable=True),
        sa.Column('user_agent', sa.String(1000), nullable=True),
        sa.Column('metrics', postgresql.JSONB(astext_type=sa.Text()), nullable=False, server_default='{}'),
        sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
        sa.PrimaryKeyConstraint('id'),
        sa.ForeignKeyConstraint(['organization_id'], ['organizations.id'], ondelete='SET NULL'),
        sa.ForeignKeyConstraint(['api_key_id'], ['api_keys.id'], ondelete='SET NULL'),
    )
    
    # Create indexes
    op.create_index('idx_api_usage_request_id', 'api_usage_metrics', ['request_id'])
    op.create_index('idx_api_usage_timestamp', 'api_usage_metrics', ['timestamp'])
    op.create_index('idx_api_usage_org_timestamp', 'api_usage_metrics', ['organization_id', 'timestamp'], 
                    postgresql_where=sa.text('organization_id IS NOT NULL'))
    op.create_index('idx_api_usage_path_timestamp', 'api_usage_metrics', ['path', 'timestamp'])
    op.create_index('idx_api_usage_status_timestamp', 'api_usage_metrics', ['status_code', 'timestamp'])
    op.create_index('idx_api_usage_route_pattern', 'api_usage_metrics', ['route_pattern', 'timestamp'])
    op.create_index('idx_api_usage_api_key', 'api_usage_metrics', ['api_key_id'], 
                    postgresql_where=sa.text('api_key_id IS NOT NULL'))
    op.create_index('idx_api_usage_metrics_gin', 'api_usage_metrics', ['metrics'], postgresql_using='gin')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    # Drop indexes
    op.drop_index('idx_api_usage_metrics_gin', table_name='api_usage_metrics')
    op.drop_index('idx_api_usage_api_key', table_name='api_usage_metrics')
    op.drop_index('idx_api_usage_route_pattern', table_name='api_usage_metrics')
    op.drop_index('idx_api_usage_status_timestamp', table_name='api_usage_metrics')
    op.drop_index('idx_api_usage_path_timestamp', table_name='api_usage_metrics')
    op.drop_index('idx_api_usage_org_timestamp', table_name='api_usage_metrics')
    op.drop_index('idx_api_usage_timestamp', table_name='api_usage_metrics')
    op.drop_index('idx_api_usage_request_id', table_name='api_usage_metrics')
    
    # Drop table
    op.drop_table('api_usage_metrics')
    # ### end Alembic commands ###
