databases:
  - name: discovery-postgres
    databaseName: discovery
    plan: basic-256mb
    region: oregon
    diskSizeGB: 5


services:
  # Main FastAPI web application
  - type: web
    name: discovery-web
    runtime: python
    region: oregon
    plan: starter
    healthCheckPath: /health
    autoDeploy: true
    buildCommand: pip install -r requirements.txt
    startCommand: python main.py serve --host 0.0.0.0 --port $PORT --production
    preDeployCommand: alembic upgrade head && python -m scripts.setup_pinecone
    envVars:
      - key: DATABASE_URL
        fromDatabase:
          name: discovery-postgres
          property: connectionString
      - key: PYTHON_VERSION
        value: 3.10.16
      - key: ENVIRONMENT
        value: production
      - key: DEBUG
        value: false
      - key: DB_ECHO
        value: false
      - key: DB_MIN_CONNECTIONS
        value: 1
      - key: DB_MAX_CONNECTIONS
        value: 10
      - key: CELERY_BROKER_URL
        fromService:
          name: discovery-redis
          type: redis
          property: connectionString
      - key: CELERY_RESULT_BACKEND
        fromService:
          name: discovery-redis
          type: redis
          property: connectionString
      - key: MCP_REDIS_URL
        fromService:
          name: discovery-redis
          type: redis
          property: connectionString
      - key: CACHE_REDIS_URL
        fromService:
          name: discovery-redis
          type: redis
          property: connectionString
      - key: FEED_CHECK_INTERVAL
        value: 300
      - key: EMBEDDING_UPDATE_INTERVAL
        value: 3600
      - key: CLEANUP_INTERVAL
        value: 3600
      - key: TRIGGER_INGESTION_ON_STARTUP
        value: true
      - key: INGESTION_CONFIG_PATH
        value: /opt/render/project/src/ingestion.yaml
      - key: LOG_LEVEL
        value: info
      - key: PINECONE_BATCH_SIZE
        value: 96
      - key: PINECONE_API_KEY
        sync: false
      - key: PINECONE_ENVIRONMENT
        sync: false
      - key: PINECONE_CLOUD
        value: aws
      - key: PINECONE_REGION
        value: us-east-1
      - key: PINECONE_DENSE_INDEX
        sync: false
      - key: PINECONE_SPARSE_INDEX
        sync: false
      - key: PINECONE_NAMESPACE
        value: __default__
      - key: VECTOR_PROVIDER
        value: pinecone
      - key: EMBEDDING_API_KEY
        sync: false


  # Celery worker for background tasks (including embeddings)
  - type: worker
    name: discovery-worker
    runtime: python
    region: oregon
    plan: starter
    autoDeploy: true
    buildCommand: pip install -r requirements.txt
    startCommand: celery -A app.worker.celery_app worker --loglevel=info -Q celery,embeddings_high,embeddings_bulk
    envVars:
      - key: DATABASE_URL
        fromDatabase:
          name: discovery-postgres
          property: connectionString
      - key: PYTHON_VERSION
        value: 3.10.16
      - key: ENVIRONMENT
        value: production
      - key: DEBUG
        value: false
      - key: DB_ECHO
        value: false
      - key: DB_MIN_CONNECTIONS
        value: 1
      - key: DB_MAX_CONNECTIONS
        value: 10
      - key: CELERY_BROKER_URL
        fromService:
          name: discovery-redis
          type: redis
          property: connectionString
      - key: CELERY_RESULT_BACKEND
        fromService:
          name: discovery-redis
          type: redis
          property: connectionString
      - key: MCP_REDIS_URL
        fromService:
          name: discovery-redis
          type: redis
          property: connectionString
      - key: CACHE_REDIS_URL
        fromService:
          name: discovery-redis
          type: redis
          property: connectionString
      - key: FEED_CHECK_INTERVAL
        value: 300
      - key: EMBEDDING_UPDATE_INTERVAL
        value: 3600
      - key: CLEANUP_INTERVAL
        value: 3600
      - key: TRIGGER_INGESTION_ON_STARTUP
        value: true
      - key: INGESTION_CONFIG_PATH
        value: /opt/render/project/src/ingestion.yaml
      - key: LOG_LEVEL
        value: info
      - key: PINECONE_BATCH_SIZE
        value: 96
      - key: PINECONE_API_KEY
        sync: false
      - key: PINECONE_ENVIRONMENT
        sync: false
      - key: PINECONE_CLOUD
        value: aws
      - key: PINECONE_REGION
        value: us-east-1
      - key: PINECONE_DENSE_INDEX
        sync: false
      - key: PINECONE_SPARSE_INDEX
        sync: false
      - key: PINECONE_NAMESPACE
        value: __default__
      - key: VECTOR_PROVIDER
        value: pinecone
      - key: EMBEDDING_API_KEY
        sync: false


  # Celery beat scheduler for periodic tasks
  - type: worker
    name: discovery-scheduler
    runtime: python
    region: oregon
    plan: starter
    autoDeploy: true
    buildCommand: pip install -r requirements.txt
    startCommand: celery -A app.worker.celery_app beat --loglevel=info
    envVars:
      - key: DATABASE_URL
        fromDatabase:
          name: discovery-postgres
          property: connectionString
      - key: PYTHON_VERSION
        value: 3.10.16
      - key: ENVIRONMENT
        value: production
      - key: DEBUG
        value: false
      - key: DB_ECHO
        value: false
      - key: DB_MIN_CONNECTIONS
        value: 1
      - key: DB_MAX_CONNECTIONS
        value: 10
      - key: CELERY_BROKER_URL
        fromService:
          name: discovery-redis
          type: redis
          property: connectionString
      - key: CELERY_RESULT_BACKEND
        fromService:
          name: discovery-redis
          type: redis
          property: connectionString
      - key: MCP_REDIS_URL
        fromService:
          name: discovery-redis
          type: redis
          property: connectionString
      - key: CACHE_REDIS_URL
        fromService:
          name: discovery-redis
          type: redis
          property: connectionString
      - key: FEED_CHECK_INTERVAL
        value: 300
      - key: EMBEDDING_UPDATE_INTERVAL
        value: 3600
      - key: CLEANUP_INTERVAL
        value: 3600
      - key: TRIGGER_INGESTION_ON_STARTUP
        value: true
      - key: INGESTION_CONFIG_PATH
        value: /opt/render/project/src/ingestion.yaml
      - key: LOG_LEVEL
        value: info
      - key: PINECONE_BATCH_SIZE
        value: 96
      - key: PINECONE_API_KEY
        sync: false
      - key: PINECONE_ENVIRONMENT
        sync: false
      - key: PINECONE_CLOUD
        value: aws
      - key: PINECONE_REGION
        value: us-east-1
      - key: PINECONE_DENSE_INDEX
        sync: false
      - key: PINECONE_SPARSE_INDEX
        sync: false
      - key: PINECONE_NAMESPACE
        value: __default__
      - key: VECTOR_PROVIDER
        value: pinecone
      - key: EMBEDDING_API_KEY
        sync: false

  # MCP StreamableHTTP server
  - type: web
    name: discovery-mcp
    runtime: python
    region: oregon
    plan: starter
    buildCommand: pip install -r requirements.txt
    startCommand: python run_mcp.py --host 0.0.0.0 --port $PORT --log-level info
    envVars:
      - key: DATABASE_URL
        fromDatabase:
          name: discovery-postgres
          property: connectionString
      - key: PYTHON_VERSION
        value: 3.10.16
      - key: ENVIRONMENT
        value: production
      - key: DEBUG
        value: false
      - key: DB_ECHO
        value: false
      - key: DB_MIN_CONNECTIONS
        value: 1
      - key: DB_MAX_CONNECTIONS
        value: 10
      - key: CELERY_BROKER_URL
        fromService:
          name: discovery-redis
          type: redis
          property: connectionString
      - key: CELERY_RESULT_BACKEND
        fromService:
          name: discovery-redis
          type: redis
          property: connectionString
      - key: MCP_REDIS_URL
        fromService:
          name: discovery-redis
          type: redis
          property: connectionString
      - key: CACHE_REDIS_URL
        fromService:
          name: discovery-redis
          type: redis
          property: connectionString
      - key: FEED_CHECK_INTERVAL
        value: 300
      - key: EMBEDDING_UPDATE_INTERVAL
        value: 3600
      - key: CLEANUP_INTERVAL
        value: 3600
      - key: TRIGGER_INGESTION_ON_STARTUP
        value: true
      - key: INGESTION_CONFIG_PATH
        value: /opt/render/project/src/ingestion.yaml
      - key: LOG_LEVEL
        value: info
      - key: PINECONE_BATCH_SIZE
        value: 96
      - key: PINECONE_API_KEY
        sync: false
      - key: PINECONE_ENVIRONMENT
        sync: false
      - key: PINECONE_CLOUD
        value: aws
      - key: PINECONE_REGION
        value: us-east-1
      - key: PINECONE_DENSE_INDEX
        sync: false
      - key: PINECONE_SPARSE_INDEX
        sync: false
      - key: PINECONE_NAMESPACE
        value: __default__
      - key: VECTOR_PROVIDER
        value: pinecone
      - key: EMBEDDING_API_KEY
        sync: false


  # Redis for MCP event store and Celery broker
  - type: redis
    name: discovery-redis
    region: oregon
    plan: starter
    maxmemoryPolicy: allkeys-lru
    ipAllowList: []


version: "1"